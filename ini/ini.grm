(* $Id: ini.grm,v 1.3 2004/08/08 00:32:10 chris Exp $ *)

(* Copyright (c) 2004, Chris Lumens
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 * - The names of the contributors may not be used to endorse or promote
 *   products derived from this software without specific prior written
 *   permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *)

structure ID = IniDict

(* Construct a section's dictionary from a (key, value) list. *)
fun build_setting_dict dict lst =
   ( List.app (ID.append dict) lst ; dict )

(* Add a section's setting_dict into the main dictionary. *)
fun add_section dict (key, value) =
   ( HashTable.insert dict (key, value) ; dict )

val dict: ID.section_dict = ID.mkDict()
%%

%term EOF | NL
    | EQUAL | LBRACK | RBRACK
    | NAME of string

%nonterm ini_file of ID.section_dict
       | section_list of ID.section_dict
       | section of string * ID.setting_dict
       | header of string
       | setting_list of (string * string) list
       | setting of string * string

%pos int
%verbose
%start ini_file
%eop EOF
%noshift EOF

%name IniParser

%%

(* Start symbol *)
ini_file: section_list              (section_list)

(* Add each section dictionary into the main one. *)
section_list: section_list section  (add_section dict (#1 section, #2 section))
            | section               (add_section dict (#1 section, #2 section))

(* Create dictionary for this section, returning it and the section name. *)
section: header setting_list        (header, build_setting_dict (ID.mkDict())
                                                                setting_list)
       | header                     (header, build_setting_dict (ID.mkDict())
                                                                [])

header: LBRACK NAME RBRACK          (NAME)

(* Gather up all settings in a single section into a list. *)
setting_list: setting_list setting  (setting::setting_list)
            | setting               ([setting])

setting: NAME EQUAL NAME NL         (NAME1, NAME2)
       | NAME EQUAL NL              (NAME1, "")
